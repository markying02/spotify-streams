* import data
* use output.dta
import delimited output.csv

* generate variables
gen ln_streams = ln(streams)
gen ln_artist_count = ln(artist_count)
gen ln_num_playlists = ln(num_playlists)
gen ln_days_released = ln(days_released)
gen ln_rank = ln(chart_rank+1)

* bad regressions
regress streams artist_count days_released num_playlists chart_rank bpm is_minor danceability valence energy acousticness instrumentalness liveness speechiness, vce(robust)
 regress ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness, vce(robust)

* summary stats
summ ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_ranked is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness

* heteroskedasticity testing
regress ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_ranked is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness
predict yhat
predict res, residual
gen  res2 = res*res
rvfplot
estat imtest, white
estat hettest
regress ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_ranked is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness, vce(robust)

* multicollinearity testing
correlate ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_ranked is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness
estat vif 

* specification error testing
regress ln_streams ln_artist_count ln_days_released ln_num_playlists ln_rank is_ranked is_minor bpm danceability valence energy acousticness instrumentalness liveness speechiness, vce(robust)
estat ovtest
linktest

* beta star coefficient calculations
listcoef, std